javascript:with(window.open("","_blank","width="+screen.width*.6+",left="+screen.width*.35+",height="+screen.height*.9+",resizable,scrollbars=yes")){document.write("<head><title>JavaScript Development Environment 2.0.1</title><!-- about:blank confuses opera.. --></head><frameset rows=\"25,*,*\">\n\n  <frame name=\"toolbarFrame\" src=\"about:blank\" noresize=\"noresize\">\n\n  <frame name=\"inputFrame\" src=\"about:blank\">\n\n  <frame name=\"outputFrame\" src=\"about:blank\">\n\n</frameset>\n\n");document.close(); frames[0].document.write("<head><!-- no doctype - it makes IE ignore the height: 100%25. --><title>toolbarFrame</title>\n\n\n\n<style type=\"text/css\">\nhtml,body { width: 100%25; height: 100%25; border: none; margin: 0px; padding: 0px; }\nbutton { height: 100%25; }\n</style>\n\n<script type=\"text/javascript\">\n\nvar outputFrame = parent.outputFrame;\nvar inputFrame = parent.inputFrame;\nvar framesetElement = parent.document.documentElement.getElementsByTagName(\"frameset\")[0];\n\nvar savedRows;\n\n\n// Need to use C-style comments in handleError() and print() \n// because IE retains them when decompiling a function.\n\n\n\nfunction print(s, c) {\n  var outputFrame = parent.outputFrame; /* duplicated here in case this function is elsewhere */\n  var doc = outputFrame.document;\n\n  var newdiv = doc.createElement(\"div\");\n  newdiv.appendChild(doc.createTextNode(s));\n  if (c)\n    newdiv.style.color = c;\n  doc.body.appendChild(newdiv);\n}\n\nfunction handleError(er, file, lineNumber) \n{\n  print(\"Error on line \" + lineNumber + \": \" + er, \"red\"); \n    \n  /* Find the character offset for the line */\n  /* (code adapted from blogidate xml well-formedness bookmarklet) */\n  var ta = inputFrame.document.getElementById(\"input\");\n  var lines = ta.value.split(\"\\n\");\n  var cc = 0; \n  var i;\n  for(i=0; i < (lineNumber - 1); ++i) \n    cc += lines[i].length + 1;\n\n  /* Hacky(?) workaround for IE%27s habit of including \\r%27s in strings */\n  if (ta.value.split(\"\\r\").length > 1)\n    cc -= lineNumber - 1;\n\n  /* Select the line */\n  if(document.selection) { \n    /* IE (Leonard Lin gave me this code) */\n    var sel = ta.createTextRange(); \n    sel.moveStart(\"character\", cc); \n    sel.collapse(); \n    sel.moveEnd(\"character\", lines[i].length); \n    sel.select();\n  } else { \n    /* Mozilla */\n    ta.selectionStart = cc; \n    ta.selectionEnd = cc + lines[i].length; \n  }\n \n  /* return true; */ /* nah, let the error go through to IE%27s js consolish thing! */\n}\n\n\n\n\n\nfunction showHideOutput()\n{\n  if (outputFrame.document.body.clientHeight > 100) {\n    // hide\n    savedRows = framesetElement.rows;    \n    framesetElement.rows = \"25,*,0\";\n  }\n  else {\n    // show. use the previous size, if possible\n    if (savedRows) {\n      framesetElement.rows = savedRows;\n      savedRows = null;\n    }\n    else {\n      framesetElement.rows = \"25,*,*\";\n    }\n  }\n}\n\nfunction refocus()\n{\n  inputFrame.document.getElementById(\"input\").focus();\n}\n\n\nfunction clearOutput()\n{\n  var b = outputFrame.document.body;\n  while(b.firstChild)\n    b.removeChild(b.firstChild);\n}\n\nfunction stripLineBreaks(s)\n{\n  return s.replace(/\\n/g, \"\").replace(/\\r/g, \"\"); // stripping \\r is for IE\n}\n\nfunction execute()\n{\n  var js = inputFrame.document.getElementById(\"input\").value;\n\n  var useOpener = parent.opener && !parent.opener.closed;\n  var oldStyle = !! document.all; // lame but meh.\n  \n  print(\"Running\" + (useOpener ? \" in bookmarklet mode\" : \"\") + (oldStyle ? \" in make-IE-happy mode\" : \"\") + \"...\", \"orange\");\n\n  if (useOpener)\n    executeWithJSURL(js, parent.opener); // only way to execute against another frame\n  else if (oldStyle)\n    executeWithDW(js, execFrame); // only way to get line numbers in IE\n  else\n    executeWithJSURL(js, execFrame); // faster in Mozilla  \n}\n\n// Advantages: can get line numbers in IE.\nfunction executeWithDW(js, win)\n{\n  win.document.open();\n  win.inputFrame = inputFrame;\n  win.outputFrame = outputFrame;\n  win.document.write(\n    stripLineBreaks(\n        %27<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">%27 +\n        %27<html><head><title>execFrame<\\/title><script type=\"text/javascript\">%27\n      + print         // yay for decompilation!\n      + handleError \n      + \"window.onerror = handleError;\"\n      + \"<\\/script><\\/head>\"\n      ) \n    + %27<body><script type=\"text/javascript\">%27\n    + js         // should escape it a little to remove the string <\\/script> at least...\n    + \"<\\/script><\\/body><\\/html>\"\n    );\n  win.document.close();\n}\n\n// Advantages: can be used to inject a script into another window, faster in Mozilla.\nfunction executeWithJSURL(js, win)\n{\n  // isolate scope\n  js = \"(function(){ \" + js + \" \\n })()\";\n\n  win.print = print;\n  win.onerror = handleError;\n\n  // double encodeURIComponent because javascript: URLs themselves are encoded!\n  win.location.href = %27javascript:eval(decodeURIComponent(\"%27 + encodeURIComponent(encodeURIComponent(js)) + %27\")); void 0;%27;\n  \n  refocus();\n}\n\n// Other ideas I haven%27t tried lately: create a <script> element, eval.\n\n\nfunction makeUserScript(userScriptLink)\n{\n    userScriptLink.href = \n        \"data:text/javascript;charset=utf-8,\" + \n        encodeURIComponent(inputFrame.document.getElementById(\"input\").value + \"//.user.js\");\n}\n\n</script></head><body>\n\n<button accesskey=\"E\" onclick=\"execute(); refocus();\"><u>E</u>xecute</button>\n<!-- <button accesskey=\"R\" onclick=\"reloadAndExecute(); refocus();\"><u>R</u>eload and execute</button> -->\n<button accesskey=\"C\" onclick=\"clearOutput(); refocus();\"><u>C</u>lear output</button>\n<button accesskey=\"S\" onclick=\"showHideOutput(); refocus();\"><u>S</u>how/hide output</button>\n<!-- <button accesskey=\"H\" onclick=\"help(); refocus();\"><u>H</u>elp</button> -->\n\n<a href=\"data:text/html,...\" onfocus=\"makeUserScript(this);\" onmouseover=\"makeUserScript(this);\" target=\"_blank\">Install as user script</a>\n\n<div style=\"visibility: hidden;\">\n<iframe name=\"execFrame\" src=\"about:blank\" height=\"5\" width=\"5\"></iframe>\n</div>\n\n</body>"); frames[0].document.close(); frames[1].document.write("<head><!-- no doctype - it makes IE ignore the height: 100%25. --><title>inputFrame</title>\n\n\n\n\n\n<style type=\"text/css\">\n\nhtml,body,form,textarea { width: 100%25; height: 100%25; border: none; margin: 0px; padding: 0px; }\nhtml,body { overflow: hidden; }\n\n</style></head><body onload=\"document.getElementById(%27input%27).select();\">\n<textarea style=\"background-color: rgb(221, 238, 255);\" id=\"input\">// ==UserScript==\n// @namespace     http://www.squarefree.com/jsenv/autogenerated\n// @name          Unnamed script\n// @description   Undescribed script\n// ==/UserScript==\n\nprint(\"Squares of numbers 0 through 4:\");\nfor (var i = 0; i &lt; 5; ++i)\n  print(i * i);\n\nthis.statement.causes(an.error);\n</textarea>\n</body>"); frames[1].document.close();   }void 0
